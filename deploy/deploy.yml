---
- name: Copy artifact to remote server
  hosts: all
  vars:
    app_domain: "{{ lookup('env', 'APP_DOMAIN') }}"
    deploy_root: "/opt/{{ app_domain }}"
    deploy_tag: 'development'

  tasks:
    - name: Install Python 3 and pip
      become: yes
      ansible.builtin.apt:
        name:
          - python3
          - python3-pip
        state: present
        update_cache: yes
      when: ansible_os_family == "Debian" or ansible_os_family == "Ubuntu"

    - name: Install Docker for Python
      ansible.builtin.pip:
        name:
          - docker
          - docker-compose
        state: present
      become: yes

    - name: Ensure deploy_root exists
      file:
        path: "{{ deploy_root }}"
        state: directory
        mode: '0755'
      become: yes

    - name: Write .env file from APP_CONFIG
      copy:
        content: "{{ lookup('env', 'APP_CONFIG') }}"
        dest: "{{ deploy_root }}/.env"
      become: yes

    - name: Copy artifact to remote server
      copy:
        src: "housework-app/build/"
        dest: "{{ deploy_root }}/app"
      become: yes

    - name: Template compose
      template:
        src: docker-compose.yml.jinja2
        dest: "{{ deploy_root }}/docker-compose.yml"
      become: yes

    - name: Pull all images in docker-compose
      community.docker.docker_compose:
        project_src: "{{ deploy_root }}"
        pull: yes
      become: yes

    - name: Restart docker-compose to run new images
      community.docker.docker_compose:
        project_src: "{{ deploy_root }}"
        restarted: yes
      become: yes

    - name: Template app conf
      template:
        src: housework-app.conf.jinja2
        dest: "/etc/nginx/sites-available/{{ app_domain }}.conf"
      become: yes

    - name: Create symlink in sites-enabled
      file:
        src: "/etc/nginx/sites-available/{{ app_domain }}.conf"
        dest: "/etc/nginx/sites-enabled/{{ app_domain }}.conf"
        state: link
      become: yes
      notify: Reload nginx

  handlers:
    - name: Reload nginx
      ansible.builtin.systemd:
        name: nginx
        state: reloaded
      become: yes
